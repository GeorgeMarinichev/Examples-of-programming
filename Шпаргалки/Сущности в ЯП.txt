
Сущность              — Определение  
Класс                 — Шаблон (описание) для создания объектов, объединяет данные и методы.  
Объект                — Экземпляр класса с конкретными значениями и поведением.  
Интерфейс             — Описание набора методов и свойств без реализации, задаёт контракт для классов.  
Структура             — Тип данных, похожий на класс, но обычно с более лёгким хранением и без наследования.  
Конструктор           — Специальный метод класса или структуры, вызываемый при создании объекта для инициализации.  
Метод                 — Функция, связанная с классом или объектом, реализующая поведение.  
Свойство              — Именованный элемент класса, предоставляющий доступ к данным через геттеры и сеттеры.  
Поле                  — Переменная, объявленная внутри класса или структуры для хранения данных.  
Переменная            — Именованное место в памяти для хранения значения определённого типа.  
Массив                — Упорядоченная коллекция элементов одного типа, доступных по индексу.  
Цикл                  — Конструкция для повторного выполнения блока кода (например, for, while).  
Оператор              — Символ или конструкция, выполняющая операции над данными (арифметические, логические и др.).  
Пространство имён     — Логическая группа связанных типов и функций для организации кода и предотвращения конфликтов имён.  
Пакет / Модуль        — Единица организации кода, содержащая набор связанных классов, функций и других сущностей.  
Интерпретатор         — Программа, выполняющая код построчно во время работы.  
Компилятор            — Программа, преобразующая исходный код в машинный или промежуточный код перед выполнением.  
Константа             — Именованное значение, которое не меняется во время выполнения программы.  
Атрибут (Аннотация)   — Метаданные, добавляемые к классам, методам или другим элементам кода для передачи дополнительной информации.  
Record                — Специальный тип данных (обычно неизменяемый), предназначенный для компактного хранения связанных значений с автоматической реализацией методов сравнения и копирования.  
Модификатор доступа   — Ключевое слово, определяющее уровень видимости и доступности классов, методов, полей и других членов (например, public, private).  
Using / Import        — Директива, позволяющая подключать внешние пространства имён, модули или пакеты для использования их содержимого без полного указания пути.  
