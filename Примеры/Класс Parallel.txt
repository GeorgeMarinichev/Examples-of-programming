using System.Threading.Tasks;// Деректива поделючения пространство имен многопоточности

namespace Genesis; // Пространство имен

class MyClass//Класс
{       
    public void Method()//Метод
    {
        Console.WriteLine("1985"); 
    }
}
class Program // Основной класс программы
{ 
    public static void Main(string[] args)// Основной метод программы
    {
        //Console.SetWindowSize(80, 40);//
        Console.ForegroundColor = ConsoleColor.DarkGreen;
        Console.WriteLine("======<<<Класс Parallel>>>=====");
        Console.ResetColor();
        ///////////////////////////////////Метод Invoke///////////////////////////////////////////////
        // Parallel.Invoke(
        //     Print, 
        //     () =>
        // {
        //     Console.WriteLine($"{Task.CurrentId}");
        //     Thread.Sleep(3000);
        // },
        // () => Square(2)
        // );

        // void Print()
        //     {
        //         Console.WriteLine($"Выполняется задача{Task.CurrentId}");
        //         Thread.Sleep(3000);
        //     }


        // void Square(int n)
        // {
        //     Console.WriteLine($"Выполняется задача{Task.CurrentId}");
        //     Thread.Sleep(3000);
        //     Console.WriteLine($"Результат{n * n}");
        // }
        ///////////////////////////////////Метод Parallel.For///////////////////////////////////////////////
        // Parallel.For(1, 5, Square);

        // void Square(int n)
        // {
        //     Console.WriteLine($"Выполняется задача{Task.CurrentId}");
        //     Console.WriteLine($"сложение числа{n} равен {n + n}");
        //     Thread.Sleep(2000);
        // }

        ///////////////////////////////////Метод Parallel.ForEach///////////////////////////////////////////////
        // ParallelLoopResult result = Parallel.ForEach<int>(
        //     new List<int>(){1, 2, 3, 4, 8},
        //     Square
        // );

        // void Square(int n)
        // {
        //     Console.WriteLine($"Выполняется задача{Task.CurrentId}");
        //     Console.WriteLine($"Квадрат числа{n} равен {n * n}");
        //     Thread.Sleep(2000);
        // }

        //////////Методы Parallel.For и Parallel.ForEach выход из цикла при помощи break////////
        ParallelLoopResult result = Parallel.For(1, 10, Square);
        if(!result.IsCompleted)
            Console.WriteLine($"Выполнение цикла завершено на итерации{result.LowestBreakIteration}");

        void Square(int n, ParallelLoopState pls)//Вычесление квадрата числа
        {
            if(n == 12) pls.Break();//Если передано 5, выходит из цикла
            Console.WriteLine($"Квадрат числа{n} равен {n * n}");
            Thread.Sleep(2000);
        }
    }
}

    





        

    









