
namespace Genesis; // Пространство имен бытие
public enum Color : Byte // enum-перечесления цветов
{
    White,
    Black,
    Blue,
    Green,
    Yellow,
    Orange,
    Red
}

class Point // Мой класс точка в пространстве
{
    public Point() {}// Конструктор перегрузка 1
    public Point(int x) : this()// Конструктор перегрузка 2
    {
        this.x = x;
    }
    public Point(int x, int y) : this(x)// Конструктор перегрузка 3
    {
        // this.x = x;
        this.y = y;
    }
     public Point(int x, int y, int z) : this(x, y)// Конструктор перегрузка 4
    {
        //this.x = x;
        //this.y = y;
        this.z = z;
    }

     public Point(int x, int y, int z, Color color) : this(x, y, z) // Конструктор перегрузка 5
    {
        // this.x = x;
        // this.y = y;
        // this.z = z;
        this.color = color;
    }

    private int x = 0;// Поля
    private int y = 0;// Поля
    private int z = 0;// Поля
    private Color color;// Поля


    public void PrintPoint()// Метод класса Point
    {
        Console.WriteLine($"x:{x} y:{y} z:{z} color:{color}");
    }

    public void SetP(int x) // Метод Set для х класса Point
    {
        if (x < 1)
        {
            this.x = 1;
            return;
        }
        if (x > 10)
        {
            this.x = 10;
            return;
        }
        this.x = x;
    }
    public int GetP() // Метод Get для х класса Point
    {
        return x;
    }

    public int YP // Свойства y
    {
        get
        {
            return y;
        } 
        set
        {
            if (value < 1)
            {
                y = 1;
                return;
            }
            if (value > 10)
            {
                y = 10;
                return;
            }
            y = value;
        } 
         
    }
    public int ZP // Свойства z
    { 
        get{return z;}
        set{z = value;}
    }

    public Color CP { get; set; } // Автоматические свойства color
}

internal class Program ////////////////////// Основной класс программы //////////////////////////
{
private static void Main(string[] args)////////////////////// Основной метод программы //////////////////////////
    {
        Console.ForegroundColor = ConsoleColor.Yellow;
        Console.WriteLine("Классы, методы, перечесления, свойства, реализация аксессоров");
        Console.ForegroundColor = ConsoleColor.Cyan;
        Console.WriteLine(DateTime.Now);

        Console.WriteLine("---------------Point1---------------------");
        //Point p1 = new(); // Экземпляр класса Point
        var p1 = new Point(100, 200, 300);
        p1.PrintPoint();
        p1.SetP(50); 
        p1.PrintPoint();
        p1.YP = 50; // Присваивание данных
        //int y = p1.YP; // Извлеченение данных
        p1.PrintPoint();
        p1.ZP = 50;
        p1.PrintPoint();
        p1.CP = Color.Yellow;
        p1.PrintPoint();

        Console.WriteLine("---------------Point2---------------------");
        Point p2 = new();
        p2.SetP(20);
        p2.PrintPoint();
        p2.CP = Color.Red; // Присваивание данных
        Color col = p2.CP; // Извлеченение данных
        Console.WriteLine(col);
        Console.WriteLine(p2.CP);
        p2.PrintPoint();

    }

}