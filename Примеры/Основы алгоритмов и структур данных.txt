
using System.Runtime.InteropServices;

internal class Program
{ 
    private static void Main(string[] args)
    {
        Console.WriteLine("Основы алгоритмов и структур данных");

        Thread thread = Thread.CurrentThread;
        thread.Name = "Method Main";
        Console.WriteLine(thread.Name);

        Console.WriteLine(thread.IsAlive);
        Console.WriteLine(thread.ManagedThreadId);
        Console.WriteLine(thread.Priority);
        Console.WriteLine(thread.ThreadState);
        Console.WriteLine(thread.IsBackground);
        Console.WriteLine("====================================");
        
        // Thread threadCycle = new(метод);
        // threadCycle.Name = "Cycle";
        // threadCycle.Start();
        Console.WriteLine("==============Константный(1)==========");
        int x;
        x = 10;

        if(x < 0)
        {
            x--;
        }
        else
        {
            x++;
        }
        Console.WriteLine(x);

        Console.WriteLine("========Логарифмический(logN)==========");
        // static int Rank(int key, int[] numbers)//Пример бинарного поиска
        // {
        //     int low = 0;
        //     int high = numbers.Length -1;

        //     while (low <= high)
        //     {
        //         //
        //         int mid = low + (high - low) / 2;
        //         //
        //         if(key < numbers[mid])
        //         {
        //             high = mid -1;
        //         }
        //         else if(key > numbers[mid])
        //         {
        //             low = mid + 1;
        //         }
        //         else 
        //         {
        //             return mid;
        //         }  
        //     }
        //     return -1;
        //}
        Console.WriteLine("==============Линейный(N)=============");
        static int Factorial(int n)//Функция факториала
        {
            int result = 1;
            for (int i = 1; i <= n; i++)//2,3,
            {
                //result *= i;//
                result = result * i;
            }
            return result;
        }

        System.Console.WriteLine(Factorial(5));

        Console.WriteLine("========Линейно-логарифмический(NlogN)==========");
        //
        Console.WriteLine("==============Квадратный(N2)==========");
        static void BubbleSort(int[] nums)//Пузырьковая сортировка
        {
            int temp;
            for (int i = 0; i < nums.Length - 1; i++)
            {
                for (int j = i + 1; j < nums.Length; j++)
                {
                    if(nums[i] > nums[j])
                    {
                        temp = nums[i];
                        nums[i] = nums[j];
                        nums[j] = temp;
                    }
                }
            }
        }
        int[] sum = {1, 2, 3, 4, 5, 6, 7, 8, 9, 0};
        BubbleSort(sum);

        Console.WriteLine("==============Кубический(N3)==========");
        char[] chars = {'A', 'B', 'C'};

        // for(int i = 1; i <= chars.Length; i++)
        // {
        //     Console.WriteLine($"chars=i:{i}");
        // }

        // for(int i = 1; i <= chars.Length; i++)
        // {
        //     for (int j  = 1; j <= chars.Length; j++)
        //     {
        //         Console.WriteLine($"chars=i:{i} chars=j:{j}");
        //     }
        // }
        int a, b, c = 0;
        a = 0;
        b = 0;
        c = 0;
        for(int i = 1; i <= chars.Length; i++)
        {
            a = i;
            for (int j  = 1; j <= chars.Length; j++)
            {
                b = j;
                for (int k = 1; k <= chars.Length; k++)
                {
                    c = k;
                    Console.WriteLine($"chars=i:{a = i} chars=j:{b = j} chars=k:{c = k}");
                }
            }
        }
        Console.WriteLine($"chars=i:{a} char..s=j:{b} chars=k:{c}");
         
    }
    
        
}
