using System;

namespace ConsoleApp1
{
    internal class Program
    {
        static Random ran = new();//Рандомайзер
        const int branches = 20;  //Количество веток
        static async Task Main(string[] args)
        {
            ////////////////////////////////////////////////////////
            //Thread ChristmasThread = new Thread(Christmas_tree);//Потоки
            //Thread MelodyThread = new Thread(Melody);
            //ChristmasThread.Start();
            //MelodyThread.Start();
            ////////////////////////////////////////////////////////
            
            Task ChristmasTask = Task.Run(()=> Christmas_tree());//Задачи
            Task MelodyTask = Task.Run(()=> Melody());

            DateTime targetDate = new DateTime(2024, 12, 31, 23, 59, 59);//Целевая дата
            DateTime currentDate = DateTime.Now;//Текущая дата

            // Вычислите разницу между целевой датой и текущей датой
            TimeSpan timeRemaining = targetDate - currentDate;

            // Вывод результата времени
            
            int days = (int)timeRemaining.TotalDays;
            int hours = timeRemaining.Hours; // Часы в оставшемся времени
            int minutes = timeRemaining.Minutes; // Минуты в оставшемся времени  

            Console.Title = $"До нового 2025 года осталось:{days} дней, {hours} часов, {minutes} минут";
            Console.CursorVisible = false;//Видимость курсора
            //////////////////////////////////////
            //ChristmasThread.Join();
            //MelodyThread.Join();
            //////////////////////////////////////
            await Task.WhenAll(ChristmasTask, MelodyTask);// Ожидаем завершения задач
        }

        static void Christmas_tree()
        {
            Console.WriteLine("\t    Happy New Year !");
  
            for (int i = 0; i < branches; i++)
            {
                // Вычисляем количество пробелов и символов для текущей строки
                int spaces = branches - i - 1; // Пробелы слева
                int symbols = 2 * i + 1; // Символы для текущей ветки

                // Выводим пробелы
                Console.Write(new string(' ', spaces));

                // Выводим символы
                for (int k = 0; k < symbols; k++)
                {
                    int p = ran.Next(1, 100); //Используем существующий экземпляр Random

                    if (p < 80)
                    {
                        Console.ForegroundColor = ConsoleColor.Green;
                        Console.Write("^");
                    }
                    else
                    {
                        //    if (ran.Next(0, 3) == 0)
                        //    {
                        //        Console.ForegroundColor = ConsoleColor.Cyan;
                        //        Console.Write("C#");
                        //    }
                        //    else
                        //    {
                        //        Console.ForegroundColor = ConsoleColor.Magenta;
                        //        Console.Write("@");
                        //    }
                        switch (ran.Next(0, 4))
                        {
                            case 0:
                                Console.ForegroundColor = ConsoleColor.Magenta; Console.Write("@"); break;
                            case 1:
                                Console.ForegroundColor = ConsoleColor.Cyan; Console.Write("C#"); break;
                            case 2:
                                Console.ForegroundColor = ConsoleColor.Yellow; Console.Write("$"); break;
                            case 3:
                                Console.ForegroundColor = ConsoleColor.Red; Console.Write("*"); break;                  
                        }
                    }       
                        
                }
                // Переход на новую строку
                Console.WriteLine();

                //Thread.Sleep(100);
                Task.Delay(01);//Добавляем задержку между ветками
       
            }
            Console.ForegroundColor = ConsoleColor.Red;
            Console.WriteLine("                  ###                    ");
            Console.WriteLine("                  ###                    ");
            Console.WriteLine("                  ###                    ");
            Console.WriteLine("                  ###                    ");
            Console.ForegroundColor = ConsoleColor.White;
            Console.WriteLine("        ######################");
            Console.WriteLine("    #############################");
            Console.WriteLine(" ###################################");
            Console.ResetColor();
            Console.ReadKey(true);
        }

        static void Melody()
        {
            // Частоты для нот (в Гц)
            int[] notes = { 261, 277, 294, 311, 329, 349, 370, 392, 415, 440, 466, 494, 523, 554, 587, 622, 659, 698, 740, 784, 830, 880, 932, 988 };
            int e4 = notes[4], g4 = notes[7], c4 = notes[0], d4 = notes[2], f4 = notes[5], a4 = notes[9], e5 = notes[12];

            // Продолжительность нот (в миллисекундах)
            int[] noteDurations = { 1600, 800, 400, 200, 100 };

            // Воспроизведение мелодии
            PlayNote(e4, noteDurations[2]);
            PlayNote(e4, noteDurations[2]);
            PlayNote(e4, noteDurations[3]);
            // ... (остальные ноты)

            void PlayNote(int frequency, int duration)
            {
                Console.Beep(frequency, duration);
                Thread.Sleep(50); // Добавляем небольшую задержку между нотами
            }
        }

        //static void PlayNote(int frequency, int duration)
        //{
        //    Console.Beep(frequency, duration);
        //    Thread.Sleep(50); // Добавляем небольшую задержку между нотами
        //}
    }  
}
