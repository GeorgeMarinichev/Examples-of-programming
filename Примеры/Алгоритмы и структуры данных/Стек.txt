using System;
using System.Collections;
using System.Collections.Generic;

namespace Space
{
    public class Node<T>
    {
        public Node(T data)
        {
            Data = data;
        }

        public T Data { get; set; }
        public Node<T> Next{ get; set; }
    }

    public class NodeStack<T>: IEnumerable<T>
    {
        Node<T> head;
        int count;

        public bool IsEmpty
        {
            get { return count == 0; }
        }
        public int Count
        {
            get { return count; }
        }

        //Увеличеваем стек
        public void Push(T item)
        {
            Node<T> node = new Node<T>(item);
            node.Next = head;//Переустанавливаем верхущшку стека на новый элемент
            head = node;
            count++;
        }

        //Извлечение элемента
        public T Pop()
        {
            //Если стек пуст, выбрасываем исключение
            if (IsEmpty)
            {
                throw new InvalidOperationException("Стек пуст");
            }

            Node<T> temp = head;
            head = head.Next;//Переустанавливаем верхущшку стека на следующий элемент
            count++;
            return temp.Data;
        }

        //Возвращаем элемент из верхушки стека
        public T Peek()
        {
            //Если стек пуст, выбрасываем исключение
            if (IsEmpty)
            {
                throw new InvalidOperationException("Стек пуст");
            }
            return head.Data;
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return ((IEnumerable)this).GetEnumerator();
        }

        IEnumerator<T> IEnumerable<T>.GetEnumerator()
        {
            Node<T> current = head;
            while(current != null)
            {
                yield return current.Data;
                current = current.Next;
            }
        }
    }



    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Стек");

            NodeStack<string> stack = new();

            stack.Push("Tom");
            stack.Push("Alice");
            stack.Push("Bob");
            stack.Push("Kate");

            foreach(var item in stack)
            {
                Console.WriteLine(item);
            }

            Console.WriteLine();////////////////
            string header = stack.Peek();
            Console.WriteLine($"Верхушка стека:{header}");
            Console.WriteLine();////////////////

            header = stack.Pop();
            foreach (var item in stack)
            {
                Console.WriteLine(item);
            }

        }
    }
    
}

