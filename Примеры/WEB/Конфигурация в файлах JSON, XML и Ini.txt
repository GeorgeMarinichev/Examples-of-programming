/////////////////////////////Конфигурация в файлах JSON, XML и Ini
using System;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Http;
//////////////////////////////////////////////////////////////

namespace Space
{
    record Person(string Name, int Age);

    class Program
    {
        static void Main(string[] args)
        {
            /////////////////////////////////////////////////Получение данных конфигураци
            // //WebApplicationBuilder builder = CreateBuilder();
            // var builder = WebApplication.CreateBuilder(args);
            // var app = builder.Build();
            // ////////////////////////////////////////////////////
            // builder.Configuration.AddJsonFile("config.json");//
            // //////////////////////////////////////////////////
      
            // app.Map("/", (IConfiguration appConfig)=> $"Person:{appConfig["person"]} Company:{appConfig["company"]}");

            // //app.Run(async(context)=> await context.Response.WriteAsync("Hello, METANIT.COM"));
            // app.Run();

            /////////////////////////////////////////////////
            /////////////////////////////////////////////////Получение данных конфигураци
            //WebApplicationBuilder builder = CreateBuilder();
            // var builder = WebApplication.CreateBuilder(args);
            // var app = builder.Build();

            // builder.Configuration.AddJsonFile("config2.json");//
       
            // app.Map("/", (IConfiguration appConfig) =>
            // {
            //     var personName = appConfig["person:profile:name"];
            //     var companyName = appConfig["company:name"];
            //     return $"{personName} - {companyName}";
            // });
            // //app.Run(async(context)=> await context.Response.WriteAsync("Hello, METANIT.COM"));
            // app.Run();

            /////////////////////////////////Конфигурация в XML
            // //WebApplicationBuilder builder = CreateBuilder();
            // var builder = WebApplication.CreateBuilder(args);
            // var app = builder.Build();
            // ////////////////////////////////////////////////////
            // builder.Configuration.AddXmlFile("config.xml");//
            // //////////////////////////////////////////////////
      
            // app.Map("/", (IConfiguration appConfig)=> $"Person:{appConfig["person"]} Company:{appConfig["company"]}");

            // //app.Run(async(context)=> await context.Response.WriteAsync("Hello, METANIT.COM"));
            // app.Run();

            ///////////////////////////////Конфигурация в ini-файлах
            //WebApplicationBuilder builder = CreateBuilder();
            var builder = WebApplication.CreateBuilder(args);
            var app = builder.Build();
            ////////////////////////////////////////////////////
            builder.Configuration.AddIniFile("config.ini");//
            //////////////////////////////////////////////////
      
            app.Map("/", (IConfiguration appConfig)=> $"Person:{appConfig["person"]} Company:{appConfig["company"]}");

            //app.Run(async(context)=> await context.Response.WriteAsync("Hello, METANIT.COM"));
            app.Run();
        }
    }  
}
